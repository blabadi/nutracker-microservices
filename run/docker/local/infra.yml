# reference : https://github.com/sivaprasadreddy/spring-boot-microservices-series/blob/master/docker-compose.yml
# also see .env for full env vars
version: '3.3'
services:
  admin:
    container_name: admin
    image: basharlabadi/nutracker-admin:${ADMIN_SERVER_TAG}
    ports:
      - "9009:9009"
    depends_on:
      - auth-server
    entrypoint:  sh -c '/wait-for.sh auth-server:8004 -- java -cp app:app/lib/* com.basharallabadi.nutracker.admin.AdminApplication'
  config-server:
    container_name: config-server
    image: basharlabadi/nutracker-config-server:${CONFIG_SERVER_TAG}
    ports:
      - "8888:8888"
  redis:
    image: redis:5.0.3
    container_name: redis
    ports:
      - "6379:6379"
  discovery:
    container_name: discovery
    image: basharlabadi/nutracker-discovery:${DISCOVERY_SERVER_TAG}
    ports:
      - "8761:8761"
    depends_on:
      - config-server
    environment:
      CONFIG_SERVER_URL: ${CONFIG_SERVER_URL}
    restart: on-failure

  auth-server:
    container_name: auth-server
    image: basharlabadi/nutracker-auth-server:${AUTH_SERVER_TAG}
    ports:
      - "8004:8004"
    environment:
      CONFIG_SERVER_URL: ${CONFIG_SERVER_URL}
    depends_on:
      - config-server
      - discovery
  food-mongo:
    image: mongo:4.1
    container_name: ${FOODS_MONGO_HOST}
    volumes:
      - ./data/mongo/foods/db:/data/db
      # see https://medium.com/@MaxouMask/secured-mongodb-container-6b602ef67885
      - ./data/mongo/foods/seeds/:/docker-entrypoint-initdb.d/
    ports:
      - "27017:27017"
    environment:
      # if we want to enable authentication for the mongo db use these
      MONGO_INITDB_ROOT_USERNAME: ${FOODS_MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${FOODS_MONGO_PASSWORD}
      # props for the seed script init.sh
      APP_MONGO_USER: ${FOODS_MONGO_USERNAME}
      APP_MONGO_PASS: ${FOODS_MONGO_PASSWORD}
      APP_MONGO_DB: ${FOODS_MONGO_DB}
  entries-mongo:
    image: mongo:4.1
    command: mongod --port 27018
    container_name: ${ENTRIES_MONGO_HOST}
    volumes:
      - ./data/mongo/entries/db:/data/db
      - ./data/mongo/entries/seeds/:/docker-entrypoint-initdb.d/
    ports:
      - "27018:27018"
    # if we want to enable authentication for the mongo db use these
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${ENTRIES_MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${ENTRIES_MONGO_PASSWORD}
      # props for the seed script init.sh
      APP_MONGO_USER: ${ENTRIES_MONGO_USERNAME}
      APP_MONGO_PASS: ${ENTRIES_MONGO_PASSWORD}
      APP_MONGO_DB: ${ENTRIES_MONGO_DB}

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.1.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST}
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/kafka:/kafka

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    environment:
      - KAFKA_ZOOKEEPER=zookeeper
    depends_on:
      - kafka
      - zookeeper

  #############################################
  ##### ELK stack for logs aggregation    #####
  #############################################
  elasticsearch:
    container_name: elk-elastic-search
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.6.1
    user: root
    container_name: filebeat
    volumes:
      - filebeat_data:/usr/share/filebeat/data:rw
      - ./data/elk-config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - "ELASTICSEARCH_HOSTS=elk-elastic-search:9200"
      - strict.perms=false
    depends_on:
      - elasticsearch
    command: filebeat -e -strict.perms=false
#  logstash:
#    image: docker.elastic.co/logstash/logstash:6.3.2
#    ports:
#      - '25826:25826'
#    volumes:
#      - ./data/elk-config:/elk-config
#    command: logstash -f /elk-config/logstash.config
#    depends_on:
#      - elasticsearch
volumes:
  filebeat_data: